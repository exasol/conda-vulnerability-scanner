from argparse import ArgumentParser
from pathlib import Path

import nox

from scripts.version_check import (
    check_or_fix_version, VersionCheckStatus,
)


def release_project(session: nox.Session, version_file: Path):
    def create_parser():
        p = ArgumentParser(
            "Release a pypi package",
            usage="nox -s release -- [-h] [-d]",
        )
        p.add_argument("-d", "--dry-run", action="store_true", help="just do a dry run")
        p.add_argument("-r", "--repository", type=str, default=None, help="repository")
        return p

    args = []
    parser = create_parser()
    cli_args = parser.parse_args(session.posargs)
    if cli_args.dry_run:
        args.append("--dry-run")

    if cli_args.repository is not None:
        args.append("-r")
        args.append(cli_args.repository)

    status = check_or_fix_version(fix=False, version_module=version_file)
    if status != VersionCheckStatus.SUCCESS:
        session.error("Version check failed, aborting the release.")

    session.run(
        "poetry",
        "build",
        external=True,
    )

    session.run(
        "poetry",
        "publish",
        *args,
        external=True,
    )
