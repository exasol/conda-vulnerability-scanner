import webbrowser
from pathlib import Path

import nox

from scripts.release import release_project
from scripts.version_check import check_or_fix_version, version_from_poetry

PROJECT_ROOT = Path(__file__).parent
LOCAL_DOC = PROJECT_ROOT / "doc"

nox.options.sessions = []


class Settings:
    PORJECT_NAME = "conda_vulnerability_scanner"
    VERSION_FILE = PROJECT_ROOT / PORJECT_NAME / "version.py"


def _build_html_doc(session: nox.Session):
    session.run("sphinx-apidoc", "-T", "-e", "-o", "api", f"../{Settings.PORJECT_NAME}")
    session.run("sphinx-build", "-b", "html", "-W", ".", ".build-docu")


def _open_docs_in_browser(session: nox.Session):
    index_file_path = Path(".build-docu/index.html").resolve()
    webbrowser.open_new_tab(index_file_path.as_uri())


@nox.session(name="build-html-doc", python=False)
def build_html_doc(session: nox.Session):
    """Build the documentation for current checkout"""
    with session.chdir(LOCAL_DOC):
        _build_html_doc(session)


@nox.session(name="open-html-doc", python=False)
def open_html_doc(session: nox.Session):
    """Open the documentation for current checkout in the browser"""
    with session.chdir(LOCAL_DOC):
        _open_docs_in_browser(session)


@nox.session(name="build-and-open-html-doc", python=False)
def build_and_open_html_doc(session: nox.Session):
    """Build and open the documentation for current checkout in browser"""
    with session.chdir(LOCAL_DOC):
        _build_html_doc(session)
        _open_docs_in_browser(session)


@nox.session(name="commit-pages-main", python=False)
def commit_pages_main(session: nox.Session):
    """
    Generate the GitHub pages documentation for the main branch and
    commit it to the branch github-pages/main
    """
    with session.chdir(PROJECT_ROOT):
        session.run("sgpg",
                    "--target-branch", "github-pages/main",
                    "--push-origin", "origin",
                    "--commit",
                    "--source-branch", "main",
                    "--module-path", "${StringArray[@]}",
                    env={"StringArray": (f"../{Settings.PORJECT_NAME}")})


@nox.session(name="commit-pages-current", python=False)
def commit_pages_current(session: nox.Session):
    """
    Generate the GitHub pages documentation for the current branch and
    commit it to the branch github-pages/<current_branch>
    """
    branch = session.run("git", "branch", "--show-current", silent=True)
    with session.chdir(PROJECT_ROOT):
        session.run("sgpg",
                    "--target-branch", "github-pages/" + branch[:-1],
                    "--push-origin", "origin",
                    "--commit",
                    "--module-path", "${StringArray[@]}",
                    env={"StringArray": (f"../{Settings.PORJECT_NAME}")})


@nox.session(name="push-pages-main", python=False)
def push_pages_main(session: nox.Session):
    """
    Generate the GitHub pages documentation for the main branch and
    pushes it to the remote branch github-pages/main
    """
    with session.chdir(PROJECT_ROOT):
        session.run("sgpg",
                    "--target-branch", "github-pages/main",
                    "--push-origin", "origin",
                    "--push",
                    "--source-branch", "main",
                    "--module-path", "${StringArray[@]}",
                    env={"StringArray": (f"../{Settings.PORJECT_NAME}")})


@nox.session(name="push-pages-current", python=False)
def push_pages_current(session: nox.Session):
    """
    Generate the GitHub pages documentation for the current branch and
    pushes it to the remote branch github-pages/<current_branch>
    """
    branch = session.run("git", "branch", "--show-current", silent=True)
    with session.chdir(PROJECT_ROOT):
        session.run("sgpg",
                    "--target-branch", "github-pages/" + branch[:-1],
                    "--push-origin", "origin",
                    "--push",
                    "--module-path", "${StringArray[@]}",
                    env={"StringArray": (f"../{Settings.PORJECT_NAME}")})


@nox.session(name="push-pages-release", python=False)
def push_pages_release(session: nox.Session):
    """Generate the GitHub pages documentation for the release and pushes it to the remote branch github-pages/main"""

    version = version_from_poetry()
    version_string = f"{version.major}.{version.minor}.{version.patch}"
    session.run("git", "tag", version_string)
    session.run("git", "push", "origin", version_string)
    with session.chdir(PROJECT_ROOT):
        session.run("sgpg",
                    "--target-branch", "github-pages/main",
                    "--push-origin", "origin",
                    "--push",
                    "--source-branch", version_string,
                    "--source_origin", "tags",
                    "--module-path", "${StringArray[@]}",
                    env={"StringArray": (f"../{Settings.PORJECT_NAME}")})


@nox.session(name="run-tests", python=False)
def run_tests(session: nox.Session):
    """Run the tests in the poetry environment"""
    with session.chdir(PROJECT_ROOT):
        session.run("pytest", "tests")


@nox.session(python=False)
def release(session: nox.Session):
    release_project(session, Settings.VERSION_FILE)


@nox.session(python=False)
def fix_version(session: nox.Session):
    check_or_fix_version(True, Settings.VERSION_FILE)
